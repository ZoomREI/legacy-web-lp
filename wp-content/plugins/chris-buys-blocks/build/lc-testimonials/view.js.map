{"version":3,"file":"lc-testimonials/view.js","mappings":"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","sources":["webpack://chris-buys-blocks/./src/lc-testimonials/view.js"],"sourcesContent":["// import gsap from \"gsap\";\n// import { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\n\n\nfunction loadCallback() {\n\tgsap.registerPlugin(ScrollToPlugin);\n\n\t// Function to handle the carousel logic for smaller screens\n\tconst initializeCarousel = () => {\n\t\tif (window.innerWidth < 1024) {\n\t\t\tconst track = document.querySelector(\".lc-testimonials__testimonials\");\n\t\t\tconst slides = Array.from(track.children);\n\t\t\tconst dotsNav = document.querySelector(\".lc-testimonials .carousel-dots\");\n\t\t\tconst dots = Array.from(dotsNav.children);\n\t\t\tlet currentSlideIndex = 0;\n\t\t\tlet isScrolling = false; // Flag to indicate if scrolling is in progress\n\n\t\t\t// Function to manually calculate slide positions and handle resize\n\t\t\tconst setSlidePositions = () => {\n\t\t\t\tconst slideWidth = slides[0].getBoundingClientRect().width;\n\t\t\t\tconst containerWidth =\n\t\t\t\t\ttrack.parentElement.getBoundingClientRect().width;\n\t\t\t\tconst initialOffset = (containerWidth - slideWidth) / 2;\n\n\t\t\t\t// Set initial offset for the first slide\n\t\t\t\ttrack.style.paddingLeft = `${initialOffset}px`;\n\n\t\t\t\t// Adjust slides position\n\t\t\t\tslides.forEach((slide, index) => {\n\t\t\t\t\tslide.style.left = `${slideWidth * index}px`;\n\t\t\t\t});\n\n\t\t\t\tupdateDots(-1, currentSlideIndex); // Initialize dots correctly\n\t\t\t};\n\n\t\t\tconst updateDots = (currentIndex, targetIndex) => {\n\t\t\t\tif (dots[targetIndex]) {\n\t\t\t\t\tdots[currentIndex]?.classList.remove(\"active\");\n\t\t\t\t\tdots[targetIndex].classList.add(\"active\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst moveToSlide = (targetIndex) => {\n\t\t\t\tconst slideWidth = slides[0].offsetWidth;\n\t\t\t\tconst targetSlide = slides[targetIndex];\n\t\t\t\tconst targetPosition =\n\t\t\t\t\ttargetSlide.offsetLeft - (track.clientWidth - slideWidth) / 2;\n\n\t\t\t\tisScrolling = true; // Set the flag to true before starting the scroll\n\t\t\t\tgsap.to(track, {\n\t\t\t\t\tscrollTo: { x: targetPosition },\n\t\t\t\t\tduration: 0.6,\n\t\t\t\t\tease: \"power2.inOut\",\n\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\tisScrolling = false; // Reset the flag once scrolling is complete\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tupdateDots(currentSlideIndex, targetIndex);\n\t\t\t\tcurrentSlideIndex = targetIndex;\n\t\t\t};\n\n\t\t\t// Event listener for dot navigation\n\t\t\tdotsNav.addEventListener(\"click\", (e) => {\n\t\t\t\tconst targetDot = e.target.closest(\"span\");\n\t\t\t\tif (!targetDot) return;\n\n\t\t\t\tconst targetIndex = dots.findIndex((dot) => dot === targetDot);\n\t\t\t\tmoveToSlide(targetIndex);\n\t\t\t});\n\n\t\t\t// Sync dots based on scroll position\n\t\t\ttrack.addEventListener(\"scroll\", () => {\n\t\t\t\tif (isScrolling) return; // Skip updating if scrolling is in progress\n\n\t\t\t\tconst slideWidth = slides[0].offsetWidth;\n\t\t\t\tconst scrolledIndex = Math.round(track.scrollLeft / slideWidth);\n\t\t\t\tif (\n\t\t\t\t\tscrolledIndex !== currentSlideIndex &&\n\t\t\t\t\tscrolledIndex < dots.length\n\t\t\t\t) {\n\t\t\t\t\tupdateDots(currentSlideIndex, scrolledIndex);\n\t\t\t\t\tcurrentSlideIndex = scrolledIndex;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Set the initial active dot\n\t\t\tupdateDots(0, 0);\n\n\t\t\t// Set up slide positions on load and resize\n\t\t\tsetSlidePositions();\n\t\t\twindow.addEventListener(\"resize\", setSlidePositions);\n\t\t}\n\t};\n\n\t// Initialize the carousel logic on page load\n\tinitializeCarousel();\n\n\t// Re-check and reinitialize the carousel logic on window resize\n\twindow.addEventListener(\"resize\", () => {\n\t\t// Remove any previously added event listeners to avoid duplication\n\t\tconst track = document.querySelector(\".lc-testimonials__testimonials\");\n\t\ttrack.removeAttribute(\"style\"); // Reset inline styles added previously\n\n\t\t// Reinitialize if the condition is met\n\t\tinitializeCarousel();\n\t});\n\n\t// Initialize only if the viewport is desktop size\n\tif (window.innerWidth >= 1024) {\n\t\tconst loadMoreButton = document.querySelector(\n\t\t\t\".lc-testimonials__load-more\",\n\t\t);\n\t\tconst testimonialsSection = document.querySelector(\".lc-testimonials\");\n\n\t\tloadMoreButton.addEventListener(\"click\", function () {\n\t\t\ttestimonialsSection.classList.add(\"lc-testimonials--expanded\");\n\t\t});\n\t}\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\tloadScript([\n\t\t'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js',\n\t\t'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/ScrollToPlugin.min.js'\n\t], loadCallback)\n});\n"],"names":["loadCallback","gsap","registerPlugin","ScrollToPlugin","initializeCarousel","window","innerWidth","track","document","querySelector","slides","Array","from","children","dotsNav","dots","currentSlideIndex","isScrolling","setSlidePositions","slideWidth","getBoundingClientRect","width","containerWidth","parentElement","initialOffset","style","paddingLeft","forEach","slide","index","left","updateDots","currentIndex","targetIndex","classList","remove","add","moveToSlide","offsetWidth","targetSlide","targetPosition","offsetLeft","clientWidth","to","scrollTo","x","duration","ease","onComplete","addEventListener","e","targetDot","target","closest","findIndex","dot","scrolledIndex","Math","round","scrollLeft","length","removeAttribute","loadMoreButton","testimonialsSection","loadScript"],"sourceRoot":""}