{"version":3,"file":"cw-virtue-carousel/view.js","mappings":";;;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzD,MAAMC,KAAK,GAAGF,QAAQ,CAACG,aAAa,CAAC,oBAAoB,CAAC;EAC1D,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAAC;EACzC,MAAMC,SAAS,GAAGR,QAAQ,CAACG,aAAa,CAAC,kBAAkB,CAAC;EAC5D,IAAIM,YAAY,GAAG,CAAC;EACpB,IAAIC,UAAU;EACd;;EAEA;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC/BD,UAAU,GAAGN,MAAM,CAAC,CAAC,CAAC,CAACQ,qBAAqB,CAAC,CAAC,CAACC,KAAK;IACpDT,MAAM,CAACU,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAChCD,KAAK,CAACE,KAAK,CAACC,IAAI,GAAGR,UAAU,GAAGM,KAAK,GAAG,IAAI;IAC7C,CAAC,CAAC;EACH,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGA,CAACC,iBAAiB,EAAEC,gBAAgB,KAAK;IAC5D,MAAMC,WAAW,GAAGlB,MAAM,CAACiB,gBAAgB,CAAC;IAC5CnB,KAAK,CAACe,KAAK,CAACM,SAAS,GAAG,cAAc,GAAGD,WAAW,CAACL,KAAK,CAACC,IAAI,GAAG,GAAG;IACrE,OAAOG,gBAAgB;EACxB,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAChC,IAAIC,MAAM,CAACC,UAAU,GAAG,IAAI,EAAE;MAC7Bf,iBAAiB,CAAC,CAAC;MACnBQ,WAAW,CAACV,YAAY,EAAEA,YAAY,CAAC;IACxC;EACD,CAAC;;EAED;EACAD,SAAS,CAACP,gBAAgB,CAAC,OAAO,EAAG0B,CAAC,IAAK;IAC1C,IAAIF,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;IAE/B,MAAME,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,OAAO,CAAC,0BAA0B,CAAC;IACjE,IAAI,CAACF,YAAY,EAAE;IAEnB,IAAIA,YAAY,CAACG,SAAS,CAACC,QAAQ,CAAC,+BAA+B,CAAC,EAAE;MACrE,MAAMC,SAAS,GAAG,CAACxB,YAAY,GAAG,CAAC,IAAIL,MAAM,CAAC8B,MAAM;MACpDzB,YAAY,GAAGU,WAAW,CAACV,YAAY,EAAEwB,SAAS,CAAC;IACpD,CAAC,MAAM;MACN,MAAME,SAAS,GAAG,CAAC1B,YAAY,GAAG,CAAC,GAAGL,MAAM,CAAC8B,MAAM,IAAI9B,MAAM,CAAC8B,MAAM;MACpEzB,YAAY,GAAGU,WAAW,CAACV,YAAY,EAAE0B,SAAS,CAAC;IACpD;IAEA,MAAMC,WAAW,GAAGC,IAAI,CAACC,SAAS,CAAEC,GAAG,IAAKA,GAAG,KAAKC,SAAS,CAAC;IAC9D/B,YAAY,GAAGU,WAAW,CAACV,YAAY,EAAE2B,WAAW,CAAC;EACtD,CAAC,CAAC;;EAEF;EACA,IAAIK,MAAM,EAAEC,IAAI;EAChBxC,KAAK,CAACD,gBAAgB,CAAC,YAAY,EAAG0B,CAAC,IAAK;IAC3C,IAAIF,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;IAE/Be,MAAM,GAAGd,CAAC,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;EAC9B,CAAC,CAAC;EAEF1C,KAAK,CAACD,gBAAgB,CAAC,WAAW,EAAG0B,CAAC,IAAK;IAC1C,IAAIF,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;IAC/BgB,IAAI,GAAGf,CAAC,CAACgB,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;EAC5B,CAAC,CAAC;EAEF1C,KAAK,CAACD,gBAAgB,CAAC,UAAU,EAAE,MAAM;IACxC,IAAIwB,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;IAE/B,MAAMmB,cAAc,GAAG,EAAE,CAAC,CAAC;IAC3B,IAAIJ,MAAM,GAAGC,IAAI,GAAGG,cAAc,EAAE;MACnC,MAAMV,SAAS,GAAG,CAAC1B,YAAY,GAAG,CAAC,IAAIL,MAAM,CAAC8B,MAAM;MACpDzB,YAAY,GAAGU,WAAW,CAACV,YAAY,EAAE0B,SAAS,CAAC;IACpD,CAAC,MAAM,IAAIO,IAAI,GAAGD,MAAM,GAAGI,cAAc,EAAE;MAC1C,MAAMZ,SAAS,GAAG,CAACxB,YAAY,GAAG,CAAC,GAAGL,MAAM,CAAC8B,MAAM,IAAI9B,MAAM,CAAC8B,MAAM;MACpEzB,YAAY,GAAGU,WAAW,CAACV,YAAY,EAAEwB,SAAS,CAAC;IACpD;EACD,CAAC,CAAC;;EAEF;EACAT,kBAAkB,CAAC,CAAC;;EAEpB;EACAC,MAAM,CAACxB,gBAAgB,CAAC,QAAQ,EAAEuB,kBAAkB,CAAC;AACtD,CAAC,CAAC,C","sources":["webpack://chris-buys-blocks/./src/cw-virtue-carousel/view.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n\tconst track = document.querySelector(\".cw-carousel-track\");\n\tconst slides = Array.from(track.children);\n\tconst buttonNav = document.querySelector(\".cw-carousel-nav\");\n\tlet currentSlide = 0;\n\tlet slideWidth;\n\t// let slideInterval;\n\n\t// Function to set slide positions and handle resize\n\tconst setSlidePositions = () => {\n\t\tslideWidth = slides[0].getBoundingClientRect().width;\n\t\tslides.forEach((slide, index) => {\n\t\t\tslide.style.left = slideWidth * index + \"px\";\n\t\t});\n\t};\n\n\t// Function to move to a specific slide\n\tconst moveToSlide = (currentSlideIndex, targetSlideIndex) => {\n\t\tconst targetSlide = slides[targetSlideIndex];\n\t\ttrack.style.transform = \"translateX(-\" + targetSlide.style.left + \")\";\n\t\treturn targetSlideIndex;\n\t};\n\n\t// Initialize carousel only if the screen width is below 1024px\n\tconst initializeCarousel = () => {\n\t\tif (window.innerWidth < 1024) {\n\t\t\tsetSlidePositions();\n\t\t\tmoveToSlide(currentSlide, currentSlide);\n\t\t}\n\t};\n\n\t// Handle navbutton click navigation\n\tbuttonNav.addEventListener(\"click\", (e) => {\n\t\tif (window.innerWidth >= 1024) return;\n\n\t\tconst targetButton = e.target.closest(\".cw-carousel-nav__button\");\n\t\tif (!targetButton) return;\n\n\t\tif (targetButton.classList.contains(\"cw-carousel-nav__button--prev\")) {\n\t\t\tconst prevSlide = (currentSlide + 1) % slides.length;\n\t\t\tcurrentSlide = moveToSlide(currentSlide, prevSlide);\n\t\t} else {\n\t\t\tconst nextSlide = (currentSlide - 1 + slides.length) % slides.length;\n\t\t\tcurrentSlide = moveToSlide(currentSlide, nextSlide);\n\t\t}\n\n\t\tconst targetIndex = dots.findIndex((dot) => dot === targetDot);\n\t\tcurrentSlide = moveToSlide(currentSlide, targetIndex);\n\t});\n\n\t// Swipe functionality\n\tlet startX, endX;\n\ttrack.addEventListener(\"touchstart\", (e) => {\n\t\tif (window.innerWidth >= 1024) return;\n\n\t\tstartX = e.touches[0].clientX;\n\t});\n\n\ttrack.addEventListener(\"touchmove\", (e) => {\n\t\tif (window.innerWidth >= 1024) return;\n\t\tendX = e.touches[0].clientX;\n\t});\n\n\ttrack.addEventListener(\"touchend\", () => {\n\t\tif (window.innerWidth >= 1024) return;\n\n\t\tconst swipeThreshold = 50; // Minimum swipe distance to change slide\n\t\tif (startX - endX > swipeThreshold) {\n\t\t\tconst nextSlide = (currentSlide + 1) % slides.length;\n\t\t\tcurrentSlide = moveToSlide(currentSlide, nextSlide);\n\t\t} else if (endX - startX > swipeThreshold) {\n\t\t\tconst prevSlide = (currentSlide - 1 + slides.length) % slides.length;\n\t\t\tcurrentSlide = moveToSlide(currentSlide, prevSlide);\n\t\t}\n\t});\n\n\t// Initialize the carousel when the DOM is loaded\n\tinitializeCarousel();\n\n\t// Reinitialize the carousel on window resize\n\twindow.addEventListener(\"resize\", initializeCarousel);\n});\n"],"names":["document","addEventListener","track","querySelector","slides","Array","from","children","buttonNav","currentSlide","slideWidth","setSlidePositions","getBoundingClientRect","width","forEach","slide","index","style","left","moveToSlide","currentSlideIndex","targetSlideIndex","targetSlide","transform","initializeCarousel","window","innerWidth","e","targetButton","target","closest","classList","contains","prevSlide","length","nextSlide","targetIndex","dots","findIndex","dot","targetDot","startX","endX","touches","clientX","swipeThreshold"],"sourceRoot":""}