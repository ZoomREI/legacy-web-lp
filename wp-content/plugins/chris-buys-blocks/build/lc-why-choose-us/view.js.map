{"version":3,"file":"lc-why-choose-us/view.js","mappings":"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","sources":["webpack://chris-buys-blocks/./src/lc-why-choose-us/view.js"],"sourcesContent":["// import gsap from \"gsap\";\r\n// import { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\r\n\r\n\r\nfunction loadCallback() {\r\n\tgsap.registerPlugin(ScrollToPlugin);\r\n\r\n\t// Function to handle the carousel logic for smaller screens\r\n\tconst initializeCarousel = () => {\r\n\t\tif (window.innerWidth < 1024) {\r\n\t\t\tconst track = document.querySelector(\".lc-why-choose-us__items\");\r\n\t\t\tconst slides = Array.from(track.children);\r\n\t\t\tconst dotsNav = document.querySelector(\r\n\t\t\t\t\".lc-why-choose-us .carousel-dots\",\r\n\t\t\t);\r\n\t\t\tconst dots = Array.from(dotsNav.children);\r\n\t\t\tlet currentSlideIndex = 0;\r\n\t\t\tlet isScrolling = false; // Flag to indicate if scrolling is in progress\r\n\t\t\tconst slideGap = 48; // Adjust according to the actual gap between slides in pixels\r\n\r\n\t\t\t// Function to set slide positions and handle resize\r\n\t\t\tconst setSlidePositions = () => {\r\n\t\t\t\tconst slideWidth = slides[0].getBoundingClientRect().width;\r\n\t\t\t\tconst containerWidth =\r\n\t\t\t\t\ttrack.parentElement.getBoundingClientRect().width;\r\n\t\t\t\tconst initialOffset = (containerWidth - slideWidth) / 2;\r\n\r\n\t\t\t\t// Set initial offset for the first slide\r\n\t\t\t\ttrack.style.paddingLeft = `${initialOffset}px`;\r\n\r\n\t\t\t\t// Adjust slides position\r\n\t\t\t\tslides.forEach((slide, index) => {\r\n\t\t\t\t\tslide.style.left = `${(slideWidth + slideGap) * index}px`;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tupdateDots(-1, currentSlideIndex); // Initialize dots correctly\r\n\t\t\t};\r\n\r\n\t\t\tconst moveToSlide = (targetIndex) => {\r\n\t\t\t\tconst slideWidth = slides[0].offsetWidth;\r\n\t\t\t\tconst targetSlide = slides[targetIndex];\r\n\t\t\t\tconst targetPosition =\r\n\t\t\t\t\ttargetSlide.offsetLeft -\r\n\t\t\t\t\t(track.parentElement.getBoundingClientRect().width - slideWidth) / 2;\r\n\r\n\t\t\t\tisScrolling = true; // Set the flag to true before starting the scroll\r\n\t\t\t\tgsap.to(track, {\r\n\t\t\t\t\tscrollTo: { x: targetPosition },\r\n\t\t\t\t\tduration: 0.6,\r\n\t\t\t\t\tonComplete: () => {\r\n\t\t\t\t\t\tisScrolling = false;\r\n\t\t\t\t\t}, // Reset the flag once scrolling is complete\r\n\t\t\t\t});\r\n\r\n\t\t\t\tupdateDots(currentSlideIndex, targetIndex);\r\n\t\t\t\tcurrentSlideIndex = targetIndex;\r\n\t\t\t};\r\n\r\n\t\t\t// Function to update the active dot\r\n\t\t\tconst updateDots = (currentDotIndex, targetDotIndex) => {\r\n\t\t\t\tif (currentDotIndex >= 0 && dots[currentDotIndex]) {\r\n\t\t\t\t\tdots[currentDotIndex].classList.remove(\"active\");\r\n\t\t\t\t}\r\n\t\t\t\tif (dots[targetDotIndex]) {\r\n\t\t\t\t\tdots[targetDotIndex].classList.add(\"active\");\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Handle dot click navigation\r\n\t\t\tdotsNav.addEventListener(\"click\", (e) => {\r\n\t\t\t\tif (window.innerWidth >= 1024) return;\r\n\r\n\t\t\t\tconst targetDot = e.target.closest(\"span\");\r\n\t\t\t\tif (!targetDot) return;\r\n\r\n\t\t\t\tconst targetIndex = dots.findIndex((dot) => dot === targetDot);\r\n\t\t\t\tmoveToSlide(targetIndex);\r\n\t\t\t});\r\n\r\n\t\t\t// Sync dots based on scroll position\r\n\t\t\ttrack.addEventListener(\"scroll\", () => {\r\n\t\t\t\tif (isScrolling) return; // Skip updating if scrolling is in progress\r\n\r\n\t\t\t\tconst slideWidth = slides[0].offsetWidth;\r\n\t\t\t\tconst scrolledIndex = Math.round(track.scrollLeft / slideWidth);\r\n\t\t\t\tif (\r\n\t\t\t\t\tscrolledIndex !== currentSlideIndex &&\r\n\t\t\t\t\tscrolledIndex < dots.length\r\n\t\t\t\t) {\r\n\t\t\t\t\tupdateDots(currentSlideIndex, scrolledIndex);\r\n\t\t\t\t\tcurrentSlideIndex = scrolledIndex;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Set the initial active dot\r\n\t\t\tupdateDots(0, 0);\r\n\r\n\t\t\t// Set up slide positions on load and resize\r\n\t\t\tsetSlidePositions();\r\n\t\t\twindow.addEventListener(\"resize\", setSlidePositions);\r\n\t\t}\r\n\t};\r\n\r\n\t// Initialize the carousel logic on page load\r\n\tinitializeCarousel();\r\n\r\n\t// Re-check and reinitialize the carousel logic on window resize\r\n\twindow.addEventListener(\"resize\", () => {\r\n\t\t// Remove any previously added event listeners to avoid duplication\r\n\t\tconst track = document.querySelector(\".lc-why-choose-us__items\");\r\n\t\ttrack.removeAttribute(\"style\"); // Reset inline styles added previously\r\n\r\n\t\t// Reinitialize if the condition is met\r\n\t\tinitializeCarousel();\r\n\t});\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\tloadScript([\r\n\t\t'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js',\r\n\t\t'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/ScrollToPlugin.min.js'\r\n\t], loadCallback)\r\n});\r\n"],"names":["loadCallback","gsap","registerPlugin","ScrollToPlugin","initializeCarousel","window","innerWidth","track","document","querySelector","slides","Array","from","children","dotsNav","dots","currentSlideIndex","isScrolling","slideGap","setSlidePositions","slideWidth","getBoundingClientRect","width","containerWidth","parentElement","initialOffset","style","paddingLeft","forEach","slide","index","left","updateDots","moveToSlide","targetIndex","offsetWidth","targetSlide","targetPosition","offsetLeft","to","scrollTo","x","duration","onComplete","currentDotIndex","targetDotIndex","classList","remove","add","addEventListener","e","targetDot","target","closest","findIndex","dot","scrolledIndex","Math","round","scrollLeft","length","removeAttribute","loadScript"],"sourceRoot":""}